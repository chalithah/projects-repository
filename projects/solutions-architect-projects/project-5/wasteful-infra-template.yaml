AWSTemplateFormatVersion: '2010-09-09'
Description: Simple wasteful infrastructure for Cloud Cost Guardian project

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Select your VPC
    
  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Select any public subnet
    
  SubnetId2:
    Type: AWS::EC2::Subnet::Id
    Description: Select another public subnet (different AZ for Instance 2)

Resources:
  # Simple Security Group
  SimpleSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Simple security group
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Project
          Value: CostGuardian

  # Oversized EC2 Instance 1
  OversizedInstance1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.small
      ImageId: ami-0c02fb55956c7d316
      SubnetId: !Ref SubnetId
      SecurityGroupIds:
        - !Ref SimpleSecurityGroup
      UserData:
        Fn::Base64: |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          echo "<h1>Oversized Instance 1 - t3.small</h1>" > /var/www/html/index.html
          echo "<p>Should be t3.micro - Still wasting ~$15/month</p>" >> /var/www/html/index.html
      Tags:
        - Key: Name
          Value: CostGuardian-Oversized1
        - Key: Project
          Value: CostGuardian
        - Key: CostOptimization
          Value: Oversized instance

  # Oversized EC2 Instance 2 - Using different subnet
  OversizedInstance2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.medium
      ImageId: ami-0c02fb55956c7d316
      SubnetId: !Ref SubnetId2
      SecurityGroupIds:
        - !Ref SimpleSecurityGroup
      UserData:
        Fn::Base64: |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          echo "<h1>Oversized Instance 2 - t3.small</h1>" > /var/www/html/index.html
          echo "<p>Should be t3.micro - Still wasting ~$15/month</p>" >> /var/www/html/index.html
      Tags:
        - Key: Name
          Value: CostGuardian-Oversized2
        - Key: Project
          Value: CostGuardian
        - Key: CostOptimization
          Value: Oversized instance

  # Unattached EBS Volumes - distribute across both AZs
  UnattachedVolume1:
    Type: AWS::EC2::Volume
    Properties:
      Size: 50
      AvailabilityZone: !GetAtt OversizedInstance1.AvailabilityZone
      Tags:
        - Key: Name
          Value: CostGuardian-UnattachedVolume1
        - Key: Project
          Value: CostGuardian
        - Key: CostOptimization
          Value: Unattached volume

  UnattachedVolume2:
    Type: AWS::EC2::Volume
    Properties:
      Size: 50
      AvailabilityZone: !GetAtt OversizedInstance2.AvailabilityZone
      Tags:
        - Key: Name
          Value: CostGuardian-UnattachedVolume2
        - Key: Project
          Value: CostGuardian
        - Key: CostOptimization
          Value: Unattached volume

  UnattachedVolume3:
    Type: AWS::EC2::Volume
    Properties:
      Size: 100
      AvailabilityZone: !GetAtt OversizedInstance1.AvailabilityZone
      Tags:
        - Key: Name
          Value: CostGuardian-UnattachedVolume3
        - Key: Project
          Value: CostGuardian
        - Key: CostOptimization
          Value: Unattached volume

  # Unattached Elastic IPs
  UnattachedEIP1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: CostGuardian-UnattachedEIP1
        - Key: Project
          Value: CostGuardian

  UnattachedEIP2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: CostGuardian-UnattachedEIP2
        - Key: Project
          Value: CostGuardian

  # S3 Bucket for Frontend (Manual Upload) - Public access for demo
  FrontendBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'costguardian-frontend-${AWS::AccountId}-${AWS::Region}'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      Tags:
        - Key: Project
          Value: CostGuardian
        - Key: CostOptimization
          Value: No lifecycle policy
        - Key: Usage
          Value: Demo bucket - Configure public access manually after creation

Outputs:
  Instance1IP:
    Description: Public IP of Instance 1
    Value: !GetAtt OversizedInstance1.PublicIp
    
  Instance2IP:
    Description: Public IP of Instance 2
    Value: !GetAtt OversizedInstance2.PublicIp
    
  S3WebsiteURL:
    Description: S3 Website URL for manual frontend upload
    Value: !GetAtt FrontendBucket.WebsiteURL
    
  S3BucketName:
    Description: S3 Bucket Name for uploading index.html
    Value: !Ref FrontendBucket
    
  PostDeploymentSteps:
    Description: Manual steps needed after deployment
    Value: "1. Upload index.html to S3 bucket 2. Configure bucket policy manually for public access if needed"
    
  TotalEstimatedCost:
    Description: Estimated monthly cost
    Value: "$30-40/month (2x t3.small + EBS volumes + EIPs)"
